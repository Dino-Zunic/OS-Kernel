GAS LISTING /tmp/ccczShRC.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   8              	_ZL7alignUpPKv:
   9              	.LFB0:
  10              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   2:src/MemoryAllocator.cpp **** 
   3:src/MemoryAllocator.cpp **** static const void *alignUp(const void *address) {
  11              		.loc 1 3 49
  12              		.cfi_startproc
  13              	.LVL0:
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   4:src/MemoryAllocator.cpp ****     size_t result = (size_t) address;
  20              		.loc 1 4 5
  21              	.LVL1:
   5:src/MemoryAllocator.cpp ****     if (result % MEM_BLOCK_SIZE) result = (result / MEM_BLOCK_SIZE + 1) * MEM_BLOCK_SIZE;
  22              		.loc 1 5 5
  23              		.loc 1 5 16 is_stmt 0
  24 000c 9377F503 		andi	a5,a0,63
  25              		.loc 1 5 5
  26 0010 63880700 		beqz	a5,.L2
  27              		.loc 1 5 34 is_stmt 1 discriminator 1
  28              		.loc 1 5 51 is_stmt 0 discriminator 1
  29 0014 13556500 		srli	a0,a0,6
  30              	.LVL2:
  31              		.loc 1 5 68 discriminator 1
  32 0018 13051500 		addi	a0,a0,1
  33              		.loc 1 5 41 discriminator 1
  34 001c 13156500 		slli	a0,a0,6
  35              	.LVL3:
  36              	.L2:
   6:src/MemoryAllocator.cpp ****     return (const void *) result;
  37              		.loc 1 6 5 is_stmt 1
   7:src/MemoryAllocator.cpp **** }
  38              		.loc 1 7 1 is_stmt 0
  39 0020 03348100 		ld	s0,8(sp)
  40              		.cfi_restore 8
  41              		.cfi_def_cfa 2, 16
  42 0024 13010101 		addi	sp,sp,16
  43              		.cfi_def_cfa_offset 0
  44 0028 67800000 		jr	ra
  45              		.cfi_endproc
  46              	.LFE0:
  48              		.align	2
  50              	_ZL9alignDownPKv:
  51              	.LFB1:
   8:src/MemoryAllocator.cpp **** 
   9:src/MemoryAllocator.cpp **** static const void *alignDown(const void *address) {
GAS LISTING /tmp/ccczShRC.s 			page 2


  52              		.loc 1 9 51 is_stmt 1
  53              		.cfi_startproc
  54              	.LVL4:
  55 002c 130101FF 		addi	sp,sp,-16
  56              		.cfi_def_cfa_offset 16
  57 0030 23348100 		sd	s0,8(sp)
  58              		.cfi_offset 8, -8
  59 0034 13040101 		addi	s0,sp,16
  60              		.cfi_def_cfa 8, 0
  10:src/MemoryAllocator.cpp ****     return (const void *) ((size_t) address / MEM_BLOCK_SIZE * MEM_BLOCK_SIZE);
  61              		.loc 1 10 5
  11:src/MemoryAllocator.cpp **** }
  62              		.loc 1 11 1 is_stmt 0
  63 0038 137505FC 		andi	a0,a0,-64
  64              	.LVL5:
  65 003c 03348100 		ld	s0,8(sp)
  66              		.cfi_restore 8
  67              		.cfi_def_cfa 2, 16
  68 0040 13010101 		addi	sp,sp,16
  69              		.cfi_def_cfa_offset 0
  70 0044 67800000 		jr	ra
  71              		.cfi_endproc
  72              	.LFE1:
  74              		.align	2
  75              		.globl	_ZN15MemoryAllocatorC2Ev
  77              	_ZN15MemoryAllocatorC2Ev:
  78              	.LFB3:
  12:src/MemoryAllocator.cpp **** 
  13:src/MemoryAllocator.cpp **** MemoryAllocator::MemoryAllocator() {
  79              		.loc 1 13 1 is_stmt 1
  80              		.cfi_startproc
  81              	.LVL6:
  82 0048 130101FE 		addi	sp,sp,-32
  83              		.cfi_def_cfa_offset 32
  84 004c 233C1100 		sd	ra,24(sp)
  85 0050 23388100 		sd	s0,16(sp)
  86 0054 23349100 		sd	s1,8(sp)
  87 0058 23302101 		sd	s2,0(sp)
  88              		.cfi_offset 1, -8
  89              		.cfi_offset 8, -16
  90              		.cfi_offset 9, -24
  91              		.cfi_offset 18, -32
  92 005c 13040102 		addi	s0,sp,32
  93              		.cfi_def_cfa 8, 0
  94 0060 13090500 		mv	s2,a0
  95              	.LBB2:
  14:src/MemoryAllocator.cpp ****     head = (BlockHeader *) alignUp(HEAP_START_ADDR);
  96              		.loc 1 14 5
  97              		.loc 1 14 35 is_stmt 0
  98 0064 97070000 		la	a5,HEAP_START_ADDR
  98      83B70700 
  99 006c 03B50700 		ld	a0,0(a5)
 100              	.LVL7:
 101 0070 97000000 		call	_ZL7alignUpPKv
 101      E7800000 
 102              	.LVL8:
 103 0078 93040500 		mv	s1,a0
GAS LISTING /tmp/ccczShRC.s 			page 3


 104              		.loc 1 14 10
 105 007c 2330A900 		sd	a0,0(s2)
  15:src/MemoryAllocator.cpp ****     head->numberOfBlock = ((char *) alignDown(HEAP_END_ADDR) - (char *) head) / MEM_BLOCK_SIZE;
 106              		.loc 1 15 5 is_stmt 1
 107              		.loc 1 15 46 is_stmt 0
 108 0080 97070000 		la	a5,HEAP_END_ADDR
 108      83B70700 
 109 0088 03B50700 		ld	a0,0(a5)
 110 008c 97000000 		call	_ZL9alignDownPKv
 110      E7800000 
 111              	.LVL9:
 112              		.loc 1 15 62
 113 0094 B3079540 		sub	a5,a0,s1
 114              		.loc 1 15 79
 115 0098 93D76700 		srli	a5,a5,6
 116              		.loc 1 15 25
 117 009c 23B4F400 		sd	a5,8(s1)
  16:src/MemoryAllocator.cpp ****     head->next = nullptr;
 118              		.loc 1 16 5 is_stmt 1
 119 00a0 83370900 		ld	a5,0(s2)
 120              		.loc 1 16 16 is_stmt 0
 121 00a4 23B00700 		sd	zero,0(a5)
 122              	.LBE2:
  17:src/MemoryAllocator.cpp **** }
 123              		.loc 1 17 1
 124 00a8 83308101 		ld	ra,24(sp)
 125              		.cfi_restore 1
 126 00ac 03340101 		ld	s0,16(sp)
 127              		.cfi_restore 8
 128              		.cfi_def_cfa 2, 32
 129 00b0 83348100 		ld	s1,8(sp)
 130              		.cfi_restore 9
 131 00b4 03390100 		ld	s2,0(sp)
 132              		.cfi_restore 18
 133              	.LVL10:
 134 00b8 13010102 		addi	sp,sp,32
 135              		.cfi_def_cfa_offset 0
 136 00bc 67800000 		jr	ra
 137              		.cfi_endproc
 138              	.LFE3:
 140              		.globl	_ZN15MemoryAllocatorC1Ev
 141              		.set	_ZN15MemoryAllocatorC1Ev,_ZN15MemoryAllocatorC2Ev
 142              		.align	2
 143              		.globl	_ZN15MemoryAllocator6mallocEm
 145              	_ZN15MemoryAllocator6mallocEm:
 146              	.LFB5:
  18:src/MemoryAllocator.cpp **** 
  19:src/MemoryAllocator.cpp **** void *MemoryAllocator::malloc(size_t numberOfBlocks) {
 147              		.loc 1 19 54 is_stmt 1
 148              		.cfi_startproc
 149              	.LVL11:
 150 00c0 130101FF 		addi	sp,sp,-16
 151              		.cfi_def_cfa_offset 16
 152 00c4 23348100 		sd	s0,8(sp)
 153              		.cfi_offset 8, -8
 154 00c8 13040101 		addi	s0,sp,16
 155              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccczShRC.s 			page 4


 156 00cc 93060500 		mv	a3,a0
  20:src/MemoryAllocator.cpp ****     // we need one more block for bookkeeping
  21:src/MemoryAllocator.cpp ****     numberOfBlocks++;
 157              		.loc 1 21 5
 158              		.loc 1 21 19 is_stmt 0
 159 00d0 93851500 		addi	a1,a1,1
 160              	.LVL12:
  22:src/MemoryAllocator.cpp **** 
  23:src/MemoryAllocator.cpp ****     BlockHeader *current = head, *previous = nullptr;
 161              		.loc 1 23 5 is_stmt 1
 162              		.loc 1 23 18 is_stmt 0
 163 00d4 03350500 		ld	a0,0(a0)
 164              	.LVL13:
 165              		.loc 1 23 35
 166 00d8 13070000 		li	a4,0
 167              	.LVL14:
 168              	.L10:
  24:src/MemoryAllocator.cpp ****     while (current && current->numberOfBlock < numberOfBlocks) {
 169              		.loc 1 24 5 is_stmt 1
 170              		.loc 1 24 20
 171 00dc 630C0500 		beqz	a0,.L9
 172              		.loc 1 24 32 is_stmt 0 discriminator 1
 173 00e0 83378500 		ld	a5,8(a0)
 174              		.loc 1 24 20 discriminator 1
 175 00e4 63F8B700 		bgeu	a5,a1,.L9
  25:src/MemoryAllocator.cpp ****         previous = current;
 176              		.loc 1 25 9 is_stmt 1
 177              	.LVL15:
  26:src/MemoryAllocator.cpp ****         current = current->next;
 178              		.loc 1 26 9
  25:src/MemoryAllocator.cpp ****         previous = current;
 179              		.loc 1 25 18 is_stmt 0
 180 00e8 13070500 		mv	a4,a0
 181              		.loc 1 26 17
 182 00ec 03350500 		ld	a0,0(a0)
 183              	.LVL16:
  24:src/MemoryAllocator.cpp ****     while (current && current->numberOfBlock < numberOfBlocks) {
 184              		.loc 1 24 5
 185 00f0 6FF0DFFE 		j	.L10
 186              	.L9:
  27:src/MemoryAllocator.cpp ****     }
  28:src/MemoryAllocator.cpp ****     if (!current) {
 187              		.loc 1 28 5 is_stmt 1
 188 00f4 630C0502 		beqz	a0,.L8
  29:src/MemoryAllocator.cpp ****         // not enough memory
  30:src/MemoryAllocator.cpp ****         return nullptr;
  31:src/MemoryAllocator.cpp ****     }
  32:src/MemoryAllocator.cpp ****     if (current->numberOfBlock > numberOfBlocks) {
 189              		.loc 1 32 5
 190              	.LBB3:
 191              		.loc 1 32 18 is_stmt 0
 192 00f8 83378500 		ld	a5,8(a0)
 193              		.loc 1 32 5
 194 00fc 63F2F504 		bleu	a5,a1,.L12
 195              	.LBB4:
  33:src/MemoryAllocator.cpp ****         BlockHeader *newBlock = (BlockHeader *) ((char *)current + numberOfBlocks * MEM_BLOCK_SIZE)
 196              		.loc 1 33 9 is_stmt 1
GAS LISTING /tmp/ccczShRC.s 			page 5


 197              		.loc 1 33 83 is_stmt 0
 198 0100 93976500 		slli	a5,a1,6
 199              		.loc 1 33 22
 200 0104 B307F500 		add	a5,a0,a5
 201              	.LVL17:
  34:src/MemoryAllocator.cpp ****         (previous ? previous->next : head) = newBlock;
 202              		.loc 1 34 9 is_stmt 1
 203              		.loc 1 34 44 is_stmt 0
 204 0108 63080702 		beqz	a4,.L13
 205              		.loc 1 34 44 discriminator 1
 206 010c 2330F700 		sd	a5,0(a4)
 207              	.L14:
  35:src/MemoryAllocator.cpp ****         newBlock->numberOfBlock = current->numberOfBlock - numberOfBlocks;
 208              		.loc 1 35 9 is_stmt 1
 209              		.loc 1 35 44 is_stmt 0
 210 0110 03378500 		ld	a4,8(a0)
 211              	.LVL18:
 212              		.loc 1 35 58
 213 0114 3307B740 		sub	a4,a4,a1
 214              		.loc 1 35 33
 215 0118 23B4E700 		sd	a4,8(a5)
  36:src/MemoryAllocator.cpp ****         newBlock->next = current->next;
 216              		.loc 1 36 9 is_stmt 1
 217              		.loc 1 36 35 is_stmt 0
 218 011c 03370500 		ld	a4,0(a0)
 219              		.loc 1 36 24
 220 0120 23B0E700 		sd	a4,0(a5)
  37:src/MemoryAllocator.cpp ****         // bookkeeping
  38:src/MemoryAllocator.cpp ****         current->numberOfBlock = numberOfBlocks;
 221              		.loc 1 38 9 is_stmt 1
 222              		.loc 1 38 32 is_stmt 0
 223 0124 2334B500 		sd	a1,8(a0)
 224              	.LVL19:
 225              	.L15:
 226              	.LBE4:
 227              	.LBE3:
  39:src/MemoryAllocator.cpp ****     } else if (previous) {
  40:src/MemoryAllocator.cpp ****         previous->next = current->next;
  41:src/MemoryAllocator.cpp ****     } else {
  42:src/MemoryAllocator.cpp ****         head = current->next;
  43:src/MemoryAllocator.cpp ****     }
  44:src/MemoryAllocator.cpp ****     return (char *) current + MEM_BLOCK_SIZE;
 228              		.loc 1 44 5 is_stmt 1
 229              		.loc 1 44 31 is_stmt 0
 230 0128 13050504 		addi	a0,a0,64
 231              	.LVL20:
 232              	.L8:
  45:src/MemoryAllocator.cpp **** }
 233              		.loc 1 45 1
 234 012c 03348100 		ld	s0,8(sp)
 235              		.cfi_remember_state
 236              		.cfi_restore 8
 237              		.cfi_def_cfa 2, 16
 238 0130 13010101 		addi	sp,sp,16
 239              		.cfi_def_cfa_offset 0
 240 0134 67800000 		jr	ra
 241              	.LVL21:
GAS LISTING /tmp/ccczShRC.s 			page 6


 242              	.L13:
 243              		.cfi_restore_state
 244              	.LBB6:
 245              	.LBB5:
  34:src/MemoryAllocator.cpp ****         newBlock->numberOfBlock = current->numberOfBlock - numberOfBlocks;
 246              		.loc 1 34 44 discriminator 2
 247 0138 23B0F600 		sd	a5,0(a3)
 248 013c 6FF05FFD 		j	.L14
 249              	.LVL22:
 250              	.L12:
 251              	.LBE5:
  39:src/MemoryAllocator.cpp ****     } else if (previous) {
 252              		.loc 1 39 12 is_stmt 1
 253 0140 63080700 		beqz	a4,.L16
  40:src/MemoryAllocator.cpp ****     } else {
 254              		.loc 1 40 9
  40:src/MemoryAllocator.cpp ****     } else {
 255              		.loc 1 40 35 is_stmt 0
 256 0144 83370500 		ld	a5,0(a0)
  40:src/MemoryAllocator.cpp ****     } else {
 257              		.loc 1 40 24
 258 0148 2330F700 		sd	a5,0(a4)
 259 014c 6FF0DFFD 		j	.L15
 260              	.L16:
  42:src/MemoryAllocator.cpp ****     }
 261              		.loc 1 42 9 is_stmt 1
  42:src/MemoryAllocator.cpp ****     }
 262              		.loc 1 42 25 is_stmt 0
 263 0150 83370500 		ld	a5,0(a0)
  42:src/MemoryAllocator.cpp ****     }
 264              		.loc 1 42 14
 265 0154 23B0F600 		sd	a5,0(a3)
 266 0158 6FF01FFD 		j	.L15
 267              	.LBE6:
 268              		.cfi_endproc
 269              	.LFE5:
 271              		.align	2
 272              		.globl	_ZN15MemoryAllocator11getInstanceEv
 274              	_ZN15MemoryAllocator11getInstanceEv:
 275              	.LFB7:
  46:src/MemoryAllocator.cpp **** 
  47:src/MemoryAllocator.cpp **** int MemoryAllocator::free(void *memory) {
  48:src/MemoryAllocator.cpp ****     if (!memory) {
  49:src/MemoryAllocator.cpp ****         return SUCCESS;
  50:src/MemoryAllocator.cpp ****     }
  51:src/MemoryAllocator.cpp **** 
  52:src/MemoryAllocator.cpp ****     // adjust memory to read bookkeeping data
  53:src/MemoryAllocator.cpp ****     BlockHeader *block = (BlockHeader *)((char *)memory - MEM_BLOCK_SIZE);
  54:src/MemoryAllocator.cpp **** 
  55:src/MemoryAllocator.cpp ****     if ((size_t) block % MEM_BLOCK_SIZE) {
  56:src/MemoryAllocator.cpp ****         return MEMORY_MISALIGNED;
  57:src/MemoryAllocator.cpp ****     }
  58:src/MemoryAllocator.cpp ****     if ((const void *) block < HEAP_START_ADDR || (const void *) block >= HEAP_END_ADDR) {
  59:src/MemoryAllocator.cpp ****         return MEMORY_OUT_OF_BOUNDS;
  60:src/MemoryAllocator.cpp ****     }
  61:src/MemoryAllocator.cpp **** 
  62:src/MemoryAllocator.cpp ****     BlockHeader *previous = nullptr, *current = head;
GAS LISTING /tmp/ccczShRC.s 			page 7


  63:src/MemoryAllocator.cpp ****     while (current && current < block) {
  64:src/MemoryAllocator.cpp ****         previous = current;
  65:src/MemoryAllocator.cpp ****         current = current->next;
  66:src/MemoryAllocator.cpp ****     }
  67:src/MemoryAllocator.cpp **** 
  68:src/MemoryAllocator.cpp ****     block->next = current;
  69:src/MemoryAllocator.cpp ****     (previous ? previous->next : head) = block;
  70:src/MemoryAllocator.cpp ****     merge(previous);
  71:src/MemoryAllocator.cpp ****     merge(block);
  72:src/MemoryAllocator.cpp ****     return SUCCESS;
  73:src/MemoryAllocator.cpp **** }
  74:src/MemoryAllocator.cpp **** 
  75:src/MemoryAllocator.cpp **** MemoryAllocator &MemoryAllocator::getInstance() {
 276              		.loc 1 75 49 is_stmt 1
 277              		.cfi_startproc
  76:src/MemoryAllocator.cpp ****     static MemoryAllocator instance;
 278              		.loc 1 76 5
 279              		.loc 1 76 28 is_stmt 0
 280 015c 97070000 		lbu	a5,.LANCHOR0
 280      83C70700 
 281 0164 63880700 		beqz	a5,.L24
  77:src/MemoryAllocator.cpp ****     return instance;
 282              		.loc 1 77 5 is_stmt 1
  78:src/MemoryAllocator.cpp **** }
 283              		.loc 1 78 1 is_stmt 0
 284 0168 17050000 		lla	a0,.LANCHOR0+8
 284      13050500 
 285 0170 67800000 		ret
 286              	.L24:
  75:src/MemoryAllocator.cpp ****     static MemoryAllocator instance;
 287              		.loc 1 75 49 discriminator 1
 288 0174 130101FF 		addi	sp,sp,-16
 289              		.cfi_def_cfa_offset 16
 290 0178 23341100 		sd	ra,8(sp)
 291 017c 23308100 		sd	s0,0(sp)
 292              		.cfi_offset 1, -8
 293              		.cfi_offset 8, -16
 294 0180 13040101 		addi	s0,sp,16
 295              		.cfi_def_cfa 8, 0
  76:src/MemoryAllocator.cpp ****     return instance;
 296              		.loc 1 76 28 discriminator 1
 297 0184 17050000 		lla	a0,.LANCHOR0+8
 297      13050500 
 298 018c 97000000 		call	_ZN15MemoryAllocatorC1Ev
 298      E7800000 
 299              	.LVL23:
 300 0194 93071000 		li	a5,1
 301 0198 17070000 		sb	a5,.LANCHOR0,a4
 301      2300F700 
  77:src/MemoryAllocator.cpp **** }
 302              		.loc 1 77 5 is_stmt 1 discriminator 1
 303              		.loc 1 78 1 is_stmt 0 discriminator 1
 304 01a0 17050000 		lla	a0,.LANCHOR0+8
 304      13050500 
 305 01a8 83308100 		ld	ra,8(sp)
 306              		.cfi_restore 1
 307 01ac 03340100 		ld	s0,0(sp)
GAS LISTING /tmp/ccczShRC.s 			page 8


 308              		.cfi_restore 8
 309              		.cfi_def_cfa 2, 16
 310 01b0 13010101 		addi	sp,sp,16
 311              		.cfi_def_cfa_offset 0
 312 01b4 67800000 		jr	ra
 313              		.cfi_endproc
 314              	.LFE7:
 316              		.align	2
 317              		.globl	_ZN15MemoryAllocator5mergeEPNS_11BlockHeaderE
 319              	_ZN15MemoryAllocator5mergeEPNS_11BlockHeaderE:
 320              	.LFB8:
  79:src/MemoryAllocator.cpp **** 
  80:src/MemoryAllocator.cpp **** void MemoryAllocator::merge(BlockHeader *block) {
 321              		.loc 1 80 49 is_stmt 1
 322              		.cfi_startproc
 323              	.LVL24:
 324 01b8 130101FF 		addi	sp,sp,-16
 325              		.cfi_def_cfa_offset 16
 326 01bc 23348100 		sd	s0,8(sp)
 327              		.cfi_offset 8, -8
 328 01c0 13040101 		addi	s0,sp,16
 329              		.cfi_def_cfa 8, 0
  81:src/MemoryAllocator.cpp ****     if (block && block->next && (char *)block + block->numberOfBlock * MEM_BLOCK_SIZE == (char *) b
 330              		.loc 1 81 5
 331 01c4 638E0500 		beqz	a1,.L25
 332              		.loc 1 81 25 is_stmt 0 discriminator 1
 333 01c8 83B70500 		ld	a5,0(a1)
 334              		.loc 1 81 15 discriminator 1
 335 01cc 638A0700 		beqz	a5,.L25
 336              		.loc 1 81 56 discriminator 2
 337 01d0 83B68500 		ld	a3,8(a1)
 338              		.loc 1 81 70 discriminator 2
 339 01d4 13976600 		slli	a4,a3,6
 340              		.loc 1 81 47 discriminator 2
 341 01d8 3387E500 		add	a4,a1,a4
 342              		.loc 1 81 30 discriminator 2
 343 01dc 6388E700 		beq	a5,a4,.L28
 344              	.L25:
  82:src/MemoryAllocator.cpp ****         block->numberOfBlock += block->next->numberOfBlock;
  83:src/MemoryAllocator.cpp ****         block->next = block->next->next;
  84:src/MemoryAllocator.cpp ****     }
  85:src/MemoryAllocator.cpp **** }...
 345              		.loc 1 85 1
 346 01e0 03348100 		ld	s0,8(sp)
 347              		.cfi_remember_state
 348              		.cfi_restore 8
 349              		.cfi_def_cfa 2, 16
 350 01e4 13010101 		addi	sp,sp,16
 351              		.cfi_def_cfa_offset 0
 352 01e8 67800000 		jr	ra
 353              	.L28:
 354              		.cfi_restore_state
  82:src/MemoryAllocator.cpp ****         block->numberOfBlock += block->next->numberOfBlock;
 355              		.loc 1 82 9 is_stmt 1
  82:src/MemoryAllocator.cpp ****         block->numberOfBlock += block->next->numberOfBlock;
 356              		.loc 1 82 46 is_stmt 0
 357 01ec 03B78700 		ld	a4,8(a5)
GAS LISTING /tmp/ccczShRC.s 			page 9


  82:src/MemoryAllocator.cpp ****         block->numberOfBlock += block->next->numberOfBlock;
 358              		.loc 1 82 30
 359 01f0 B386E600 		add	a3,a3,a4
 360 01f4 23B4D500 		sd	a3,8(a1)
  83:src/MemoryAllocator.cpp ****         block->next = block->next->next;
 361              		.loc 1 83 9 is_stmt 1
  83:src/MemoryAllocator.cpp ****         block->next = block->next->next;
 362              		.loc 1 83 36 is_stmt 0
 363 01f8 83B70700 		ld	a5,0(a5)
  83:src/MemoryAllocator.cpp ****         block->next = block->next->next;
 364              		.loc 1 83 21
 365 01fc 23B0F500 		sd	a5,0(a1)
 366              		.loc 1 85 1
 367 0200 6FF01FFE 		j	.L25
 368              		.cfi_endproc
 369              	.LFE8:
 371              		.align	2
 372              		.globl	_ZN15MemoryAllocator4freeEPv
 374              	_ZN15MemoryAllocator4freeEPv:
 375              	.LFB6:
  47:src/MemoryAllocator.cpp **** int MemoryAllocator::free(void *memory) {
 376              		.loc 1 47 41 is_stmt 1
 377              		.cfi_startproc
 378              	.LVL25:
  48:src/MemoryAllocator.cpp ****     if (!memory) {
 379              		.loc 1 48 5
 380 0204 638C050A 		beqz	a1,.L35
  47:src/MemoryAllocator.cpp **** int MemoryAllocator::free(void *memory) {
 381              		.loc 1 47 41 is_stmt 0
 382 0208 130101FE 		addi	sp,sp,-32
 383              		.cfi_def_cfa_offset 32
 384 020c 233C1100 		sd	ra,24(sp)
 385 0210 23388100 		sd	s0,16(sp)
 386 0214 23349100 		sd	s1,8(sp)
 387 0218 23302101 		sd	s2,0(sp)
 388              		.cfi_offset 1, -8
 389              		.cfi_offset 8, -16
 390              		.cfi_offset 9, -24
 391              		.cfi_offset 18, -32
 392 021c 13040102 		addi	s0,sp,32
 393              		.cfi_def_cfa 8, 0
 394 0220 13090500 		mv	s2,a0
 395 0224 13870500 		mv	a4,a1
  53:src/MemoryAllocator.cpp ****     BlockHeader *block = (BlockHeader *)((char *)memory - MEM_BLOCK_SIZE);
 396              		.loc 1 53 5 is_stmt 1
  53:src/MemoryAllocator.cpp ****     BlockHeader *block = (BlockHeader *)((char *)memory - MEM_BLOCK_SIZE);
 397              		.loc 1 53 18 is_stmt 0
 398 0228 938405FC 		addi	s1,a1,-64
 399              	.LVL26:
  55:src/MemoryAllocator.cpp ****     if ((size_t) block % MEM_BLOCK_SIZE) {
 400              		.loc 1 55 5 is_stmt 1
  55:src/MemoryAllocator.cpp ****     if ((size_t) block % MEM_BLOCK_SIZE) {
 401              		.loc 1 55 24 is_stmt 0
 402 022c 93F7F503 		andi	a5,a1,63
  55:src/MemoryAllocator.cpp ****     if ((size_t) block % MEM_BLOCK_SIZE) {
 403              		.loc 1 55 5
 404 0230 639A0708 		bnez	a5,.L36
GAS LISTING /tmp/ccczShRC.s 			page 10


  58:src/MemoryAllocator.cpp ****     if ((const void *) block < HEAP_START_ADDR || (const void *) block >= HEAP_END_ADDR) {
 405              		.loc 1 58 5 is_stmt 1
  58:src/MemoryAllocator.cpp ****     if ((const void *) block < HEAP_START_ADDR || (const void *) block >= HEAP_END_ADDR) {
 406              		.loc 1 58 30 is_stmt 0
 407 0234 97070000 		la	a5,HEAP_START_ADDR
 407      83B70700 
 408 023c 83B70700 		ld	a5,0(a5)
  58:src/MemoryAllocator.cpp ****     if ((const void *) block < HEAP_START_ADDR || (const void *) block >= HEAP_END_ADDR) {
 409              		.loc 1 58 5
 410 0240 63E6F408 		bgtu	a5,s1,.L37
  58:src/MemoryAllocator.cpp ****     if ((const void *) block < HEAP_START_ADDR || (const void *) block >= HEAP_END_ADDR) {
 411              		.loc 1 58 72 discriminator 1
 412 0244 97070000 		la	a5,HEAP_END_ADDR
 412      83B70700 
 413 024c 83B70700 		ld	a5,0(a5)
  58:src/MemoryAllocator.cpp ****     if ((const void *) block < HEAP_START_ADDR || (const void *) block >= HEAP_END_ADDR) {
 414              		.loc 1 58 48 discriminator 1
 415 0250 63F2F408 		bleu	a5,s1,.L38
  62:src/MemoryAllocator.cpp ****     BlockHeader *previous = nullptr, *current = head;
 416              		.loc 1 62 5 is_stmt 1
 417              	.LVL27:
  62:src/MemoryAllocator.cpp ****     BlockHeader *previous = nullptr, *current = head;
 418              		.loc 1 62 39 is_stmt 0
 419 0254 83370500 		ld	a5,0(a0)
 420              	.LVL28:
  62:src/MemoryAllocator.cpp ****     BlockHeader *previous = nullptr, *current = head;
 421              		.loc 1 62 18
 422 0258 93050000 		li	a1,0
 423              	.LVL29:
 424 025c 6F00C000 		j	.L32
 425              	.LVL30:
 426              	.L43:
  64:src/MemoryAllocator.cpp ****         previous = current;
 427              		.loc 1 64 9 is_stmt 1
  65:src/MemoryAllocator.cpp ****         current = current->next;
 428              		.loc 1 65 9
  64:src/MemoryAllocator.cpp ****         previous = current;
 429              		.loc 1 64 18 is_stmt 0
 430 0260 93850700 		mv	a1,a5
  65:src/MemoryAllocator.cpp ****         current = current->next;
 431              		.loc 1 65 17
 432 0264 83B70700 		ld	a5,0(a5)
 433              	.LVL31:
 434              	.L32:
  63:src/MemoryAllocator.cpp ****     while (current && current < block) {
 435              		.loc 1 63 5 is_stmt 1
  63:src/MemoryAllocator.cpp ****     while (current && current < block) {
 436              		.loc 1 63 20
 437 0268 63840700 		beqz	a5,.L31
  63:src/MemoryAllocator.cpp ****     while (current && current < block) {
 438              		.loc 1 63 20 is_stmt 0 discriminator 1
 439 026c E3EA97FE 		bltu	a5,s1,.L43
 440              	.L31:
  68:src/MemoryAllocator.cpp ****     block->next = current;
 441              		.loc 1 68 5 is_stmt 1
  68:src/MemoryAllocator.cpp ****     block->next = current;
 442              		.loc 1 68 17 is_stmt 0
GAS LISTING /tmp/ccczShRC.s 			page 11


 443 0270 2330F7FC 		sd	a5,-64(a4)
  69:src/MemoryAllocator.cpp ****     (previous ? previous->next : head) = block;
 444              		.loc 1 69 5 is_stmt 1
  69:src/MemoryAllocator.cpp ****     (previous ? previous->next : head) = block;
 445              		.loc 1 69 40 is_stmt 0
 446 0274 63800504 		beqz	a1,.L33
  69:src/MemoryAllocator.cpp ****     (previous ? previous->next : head) = block;
 447              		.loc 1 69 40 discriminator 1
 448 0278 23B09500 		sd	s1,0(a1)
 449              	.L34:
  70:src/MemoryAllocator.cpp ****     merge(previous);
 450              		.loc 1 70 5 is_stmt 1
  70:src/MemoryAllocator.cpp ****     merge(previous);
 451              		.loc 1 70 10 is_stmt 0
 452 027c 13050900 		mv	a0,s2
 453              	.LVL32:
 454 0280 97000000 		call	_ZN15MemoryAllocator5mergeEPNS_11BlockHeaderE
 454      E7800000 
 455              	.LVL33:
  71:src/MemoryAllocator.cpp ****     merge(block);
 456              		.loc 1 71 5 is_stmt 1
  71:src/MemoryAllocator.cpp ****     merge(block);
 457              		.loc 1 71 10 is_stmt 0
 458 0288 93850400 		mv	a1,s1
 459 028c 13050900 		mv	a0,s2
 460 0290 97000000 		call	_ZN15MemoryAllocator5mergeEPNS_11BlockHeaderE
 460      E7800000 
 461              	.LVL34:
  72:src/MemoryAllocator.cpp ****     return SUCCESS;
 462              		.loc 1 72 5 is_stmt 1
  72:src/MemoryAllocator.cpp ****     return SUCCESS;
 463              		.loc 1 72 12 is_stmt 0
 464 0298 13050000 		li	a0,0
 465              	.L30:
  73:src/MemoryAllocator.cpp **** }
 466              		.loc 1 73 1
 467 029c 83308101 		ld	ra,24(sp)
 468              		.cfi_remember_state
 469              		.cfi_restore 1
 470 02a0 03340101 		ld	s0,16(sp)
 471              		.cfi_restore 8
 472              		.cfi_def_cfa 2, 32
 473 02a4 83348100 		ld	s1,8(sp)
 474              		.cfi_restore 9
 475              	.LVL35:
 476 02a8 03390100 		ld	s2,0(sp)
 477              		.cfi_restore 18
 478              	.LVL36:
 479 02ac 13010102 		addi	sp,sp,32
 480              		.cfi_def_cfa_offset 0
 481 02b0 67800000 		jr	ra
 482              	.LVL37:
 483              	.L33:
 484              		.cfi_restore_state
  69:src/MemoryAllocator.cpp ****     (previous ? previous->next : head) = block;
 485              		.loc 1 69 40 discriminator 2
 486 02b4 23309900 		sd	s1,0(s2)
GAS LISTING /tmp/ccczShRC.s 			page 12


 487 02b8 6FF05FFC 		j	.L34
 488              	.LVL38:
 489              	.L35:
 490              		.cfi_def_cfa_register 2
 491              		.cfi_restore 1
 492              		.cfi_restore 8
 493              		.cfi_restore 9
 494              		.cfi_restore 18
  49:src/MemoryAllocator.cpp ****         return SUCCESS;
 495              		.loc 1 49 16
 496 02bc 13050000 		li	a0,0
 497              	.LVL39:
  73:src/MemoryAllocator.cpp **** }
 498              		.loc 1 73 1
 499 02c0 67800000 		ret
 500              	.LVL40:
 501              	.L36:
 502              		.cfi_def_cfa_register 8
 503              		.cfi_offset 1, -8
 504              		.cfi_offset 8, -16
 505              		.cfi_offset 9, -24
 506              		.cfi_offset 18, -32
  56:src/MemoryAllocator.cpp ****         return MEMORY_MISALIGNED;
 507              		.loc 1 56 16
 508 02c4 1305E0FF 		li	a0,-2
 509              	.LVL41:
 510 02c8 6FF05FFD 		j	.L30
 511              	.LVL42:
 512              	.L37:
  59:src/MemoryAllocator.cpp ****         return MEMORY_OUT_OF_BOUNDS;
 513              		.loc 1 59 16
 514 02cc 1305F0FF 		li	a0,-1
 515              	.LVL43:
 516 02d0 6FF0DFFC 		j	.L30
 517              	.LVL44:
 518              	.L38:
 519 02d4 1305F0FF 		li	a0,-1
 520              	.LVL45:
 521 02d8 6FF05FFC 		j	.L30
 522              		.cfi_endproc
 523              	.LFE6:
 525              		.bss
 526              		.align	3
 527              		.set	.LANCHOR0,. + 0
 530              	_ZGVZN15MemoryAllocator11getInstanceEvE8instance:
 531 0000 00000000 		.zero	8
 531      00000000 
 534              	_ZZN15MemoryAllocator11getInstanceEvE8instance:
 535 0008 00000000 		.zero	8
 535      00000000 
 536              		.text
 537              	.Letext0:
 538              		.file 2 "src/../h/../lib/hw.h"
 539              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccczShRC.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccczShRC.s:8      .text:0000000000000000 _ZL7alignUpPKv
     /tmp/ccczShRC.s:12     .text:0000000000000000 .L0 
     /tmp/ccczShRC.s:14     .text:0000000000000000 .L0 
     /tmp/ccczShRC.s:15     .text:0000000000000004 .L0 
     /tmp/ccczShRC.s:17     .text:0000000000000008 .L0 
     /tmp/ccczShRC.s:19     .text:000000000000000c .L0 
     /tmp/ccczShRC.s:22     .text:000000000000000c .L0 
     /tmp/ccczShRC.s:23     .text:000000000000000c .L0 
     /tmp/ccczShRC.s:24     .text:000000000000000c .L0 
     /tmp/ccczShRC.s:26     .text:0000000000000010 .L0 
     /tmp/ccczShRC.s:28     .text:0000000000000014 .L0 
     /tmp/ccczShRC.s:29     .text:0000000000000014 .L0 
     /tmp/ccczShRC.s:32     .text:0000000000000018 .L0 
     /tmp/ccczShRC.s:34     .text:000000000000001c .L0 
     /tmp/ccczShRC.s:38     .text:0000000000000020 .L0 
     /tmp/ccczShRC.s:39     .text:0000000000000020 .L0 
     /tmp/ccczShRC.s:40     .text:0000000000000024 .L0 
     /tmp/ccczShRC.s:41     .text:0000000000000024 .L0 
     /tmp/ccczShRC.s:43     .text:0000000000000028 .L0 
     /tmp/ccczShRC.s:45     .text:000000000000002c .L0 
     /tmp/ccczShRC.s:50     .text:000000000000002c _ZL9alignDownPKv
     /tmp/ccczShRC.s:53     .text:000000000000002c .L0 
     /tmp/ccczShRC.s:55     .text:000000000000002c .L0 
     /tmp/ccczShRC.s:56     .text:0000000000000030 .L0 
     /tmp/ccczShRC.s:58     .text:0000000000000034 .L0 
     /tmp/ccczShRC.s:60     .text:0000000000000038 .L0 
     /tmp/ccczShRC.s:62     .text:0000000000000038 .L0 
     /tmp/ccczShRC.s:63     .text:0000000000000038 .L0 
     /tmp/ccczShRC.s:66     .text:0000000000000040 .L0 
     /tmp/ccczShRC.s:67     .text:0000000000000040 .L0 
     /tmp/ccczShRC.s:69     .text:0000000000000044 .L0 
     /tmp/ccczShRC.s:71     .text:0000000000000048 .L0 
     /tmp/ccczShRC.s:77     .text:0000000000000048 _ZN15MemoryAllocatorC2Ev
     /tmp/ccczShRC.s:80     .text:0000000000000048 .L0 
     /tmp/ccczShRC.s:82     .text:0000000000000048 .L0 
     /tmp/ccczShRC.s:83     .text:000000000000004c .L0 
     /tmp/ccczShRC.s:88     .text:000000000000005c .L0 
     /tmp/ccczShRC.s:89     .text:000000000000005c .L0 
     /tmp/ccczShRC.s:90     .text:000000000000005c .L0 
     /tmp/ccczShRC.s:91     .text:000000000000005c .L0 
     /tmp/ccczShRC.s:93     .text:0000000000000060 .L0 
     /tmp/ccczShRC.s:97     .text:0000000000000064 .L0 
     /tmp/ccczShRC.s:98     .text:0000000000000064 .L0 
     /tmp/ccczShRC.s:105    .text:000000000000007c .L0 
     /tmp/ccczShRC.s:107    .text:0000000000000080 .L0 
     /tmp/ccczShRC.s:108    .text:0000000000000080 .L0 
     /tmp/ccczShRC.s:113    .text:0000000000000094 .L0 
     /tmp/ccczShRC.s:115    .text:0000000000000098 .L0 
     /tmp/ccczShRC.s:117    .text:000000000000009c .L0 
     /tmp/ccczShRC.s:119    .text:00000000000000a0 .L0 
     /tmp/ccczShRC.s:121    .text:00000000000000a4 .L0 
     /tmp/ccczShRC.s:124    .text:00000000000000a8 .L0 
     /tmp/ccczShRC.s:125    .text:00000000000000ac .L0 
     /tmp/ccczShRC.s:127    .text:00000000000000b0 .L0 
     /tmp/ccczShRC.s:128    .text:00000000000000b0 .L0 
GAS LISTING /tmp/ccczShRC.s 			page 14


     /tmp/ccczShRC.s:130    .text:00000000000000b4 .L0 
     /tmp/ccczShRC.s:132    .text:00000000000000b8 .L0 
     /tmp/ccczShRC.s:135    .text:00000000000000bc .L0 
     /tmp/ccczShRC.s:137    .text:00000000000000c0 .L0 
     /tmp/ccczShRC.s:77     .text:0000000000000048 _ZN15MemoryAllocatorC1Ev
     /tmp/ccczShRC.s:145    .text:00000000000000c0 _ZN15MemoryAllocator6mallocEm
     /tmp/ccczShRC.s:148    .text:00000000000000c0 .L0 
     /tmp/ccczShRC.s:150    .text:00000000000000c0 .L0 
     /tmp/ccczShRC.s:151    .text:00000000000000c4 .L0 
     /tmp/ccczShRC.s:153    .text:00000000000000c8 .L0 
     /tmp/ccczShRC.s:155    .text:00000000000000cc .L0 
     /tmp/ccczShRC.s:158    .text:00000000000000d0 .L0 
     /tmp/ccczShRC.s:159    .text:00000000000000d0 .L0 
     /tmp/ccczShRC.s:162    .text:00000000000000d4 .L0 
     /tmp/ccczShRC.s:163    .text:00000000000000d4 .L0 
     /tmp/ccczShRC.s:166    .text:00000000000000d8 .L0 
     /tmp/ccczShRC.s:170    .text:00000000000000dc .L0 
     /tmp/ccczShRC.s:171    .text:00000000000000dc .L0 
     /tmp/ccczShRC.s:173    .text:00000000000000e0 .L0 
     /tmp/ccczShRC.s:175    .text:00000000000000e4 .L0 
     /tmp/ccczShRC.s:178    .text:00000000000000e8 .L0 
     /tmp/ccczShRC.s:179    .text:00000000000000e8 .L0 
     /tmp/ccczShRC.s:180    .text:00000000000000e8 .L0 
     /tmp/ccczShRC.s:182    .text:00000000000000ec .L0 
     /tmp/ccczShRC.s:185    .text:00000000000000f0 .L0 
     /tmp/ccczShRC.s:188    .text:00000000000000f4 .L0 
     /tmp/ccczShRC.s:191    .text:00000000000000f8 .L0 
     /tmp/ccczShRC.s:192    .text:00000000000000f8 .L0 
     /tmp/ccczShRC.s:194    .text:00000000000000fc .L0 
     /tmp/ccczShRC.s:197    .text:0000000000000100 .L0 
     /tmp/ccczShRC.s:198    .text:0000000000000100 .L0 
     /tmp/ccczShRC.s:200    .text:0000000000000104 .L0 
     /tmp/ccczShRC.s:203    .text:0000000000000108 .L0 
     /tmp/ccczShRC.s:204    .text:0000000000000108 .L0 
     /tmp/ccczShRC.s:206    .text:000000000000010c .L0 
     /tmp/ccczShRC.s:209    .text:0000000000000110 .L0 
     /tmp/ccczShRC.s:210    .text:0000000000000110 .L0 
     /tmp/ccczShRC.s:213    .text:0000000000000114 .L0 
     /tmp/ccczShRC.s:215    .text:0000000000000118 .L0 
     /tmp/ccczShRC.s:217    .text:000000000000011c .L0 
     /tmp/ccczShRC.s:218    .text:000000000000011c .L0 
     /tmp/ccczShRC.s:220    .text:0000000000000120 .L0 
     /tmp/ccczShRC.s:222    .text:0000000000000124 .L0 
     /tmp/ccczShRC.s:223    .text:0000000000000124 .L0 
     /tmp/ccczShRC.s:229    .text:0000000000000128 .L0 
     /tmp/ccczShRC.s:230    .text:0000000000000128 .L0 
     /tmp/ccczShRC.s:234    .text:000000000000012c .L0 
     /tmp/ccczShRC.s:235    .text:0000000000000130 .L0 
     /tmp/ccczShRC.s:236    .text:0000000000000130 .L0 
     /tmp/ccczShRC.s:237    .text:0000000000000130 .L0 
     /tmp/ccczShRC.s:239    .text:0000000000000134 .L0 
     /tmp/ccczShRC.s:243    .text:0000000000000138 .L0 
     /tmp/ccczShRC.s:247    .text:0000000000000138 .L0 
     /tmp/ccczShRC.s:253    .text:0000000000000140 .L0 
     /tmp/ccczShRC.s:255    .text:0000000000000144 .L0 
     /tmp/ccczShRC.s:256    .text:0000000000000144 .L0 
     /tmp/ccczShRC.s:258    .text:0000000000000148 .L0 
GAS LISTING /tmp/ccczShRC.s 			page 15


     /tmp/ccczShRC.s:262    .text:0000000000000150 .L0 
     /tmp/ccczShRC.s:263    .text:0000000000000150 .L0 
     /tmp/ccczShRC.s:265    .text:0000000000000154 .L0 
     /tmp/ccczShRC.s:268    .text:000000000000015c .L0 
     /tmp/ccczShRC.s:274    .text:000000000000015c _ZN15MemoryAllocator11getInstanceEv
     /tmp/ccczShRC.s:277    .text:000000000000015c .L0 
     /tmp/ccczShRC.s:278    .text:000000000000015c .L0 
     /tmp/ccczShRC.s:279    .text:000000000000015c .L0 
     /tmp/ccczShRC.s:280    .text:000000000000015c .L0 
     /tmp/ccczShRC.s:283    .text:0000000000000168 .L0 
     /tmp/ccczShRC.s:284    .text:0000000000000168 .L0 
     /tmp/ccczShRC.s:288    .text:0000000000000174 .L0 
     /tmp/ccczShRC.s:289    .text:0000000000000178 .L0 
     /tmp/ccczShRC.s:292    .text:0000000000000180 .L0 
     /tmp/ccczShRC.s:293    .text:0000000000000180 .L0 
     /tmp/ccczShRC.s:295    .text:0000000000000184 .L0 
     /tmp/ccczShRC.s:297    .text:0000000000000184 .L0 
     /tmp/ccczShRC.s:303    .text:00000000000001a0 .L0 
     /tmp/ccczShRC.s:304    .text:00000000000001a0 .L0 
     /tmp/ccczShRC.s:306    .text:00000000000001ac .L0 
     /tmp/ccczShRC.s:308    .text:00000000000001b0 .L0 
     /tmp/ccczShRC.s:309    .text:00000000000001b0 .L0 
     /tmp/ccczShRC.s:311    .text:00000000000001b4 .L0 
     /tmp/ccczShRC.s:313    .text:00000000000001b8 .L0 
     /tmp/ccczShRC.s:319    .text:00000000000001b8 _ZN15MemoryAllocator5mergeEPNS_11BlockHeaderE
     /tmp/ccczShRC.s:322    .text:00000000000001b8 .L0 
     /tmp/ccczShRC.s:324    .text:00000000000001b8 .L0 
     /tmp/ccczShRC.s:325    .text:00000000000001bc .L0 
     /tmp/ccczShRC.s:327    .text:00000000000001c0 .L0 
     /tmp/ccczShRC.s:329    .text:00000000000001c4 .L0 
     /tmp/ccczShRC.s:331    .text:00000000000001c4 .L0 
     /tmp/ccczShRC.s:333    .text:00000000000001c8 .L0 
     /tmp/ccczShRC.s:335    .text:00000000000001cc .L0 
     /tmp/ccczShRC.s:337    .text:00000000000001d0 .L0 
     /tmp/ccczShRC.s:339    .text:00000000000001d4 .L0 
     /tmp/ccczShRC.s:341    .text:00000000000001d8 .L0 
     /tmp/ccczShRC.s:343    .text:00000000000001dc .L0 
     /tmp/ccczShRC.s:346    .text:00000000000001e0 .L0 
     /tmp/ccczShRC.s:347    .text:00000000000001e4 .L0 
     /tmp/ccczShRC.s:348    .text:00000000000001e4 .L0 
     /tmp/ccczShRC.s:349    .text:00000000000001e4 .L0 
     /tmp/ccczShRC.s:351    .text:00000000000001e8 .L0 
     /tmp/ccczShRC.s:354    .text:00000000000001ec .L0 
     /tmp/ccczShRC.s:356    .text:00000000000001ec .L0 
     /tmp/ccczShRC.s:357    .text:00000000000001ec .L0 
     /tmp/ccczShRC.s:359    .text:00000000000001f0 .L0 
     /tmp/ccczShRC.s:362    .text:00000000000001f8 .L0 
     /tmp/ccczShRC.s:363    .text:00000000000001f8 .L0 
     /tmp/ccczShRC.s:365    .text:00000000000001fc .L0 
     /tmp/ccczShRC.s:367    .text:0000000000000200 .L0 
     /tmp/ccczShRC.s:368    .text:0000000000000204 .L0 
     /tmp/ccczShRC.s:374    .text:0000000000000204 _ZN15MemoryAllocator4freeEPv
     /tmp/ccczShRC.s:377    .text:0000000000000204 .L0 
     /tmp/ccczShRC.s:379    .text:0000000000000204 .L0 
     /tmp/ccczShRC.s:380    .text:0000000000000204 .L0 
     /tmp/ccczShRC.s:382    .text:0000000000000208 .L0 
     /tmp/ccczShRC.s:383    .text:000000000000020c .L0 
GAS LISTING /tmp/ccczShRC.s 			page 16


     /tmp/ccczShRC.s:388    .text:000000000000021c .L0 
     /tmp/ccczShRC.s:389    .text:000000000000021c .L0 
     /tmp/ccczShRC.s:390    .text:000000000000021c .L0 
     /tmp/ccczShRC.s:391    .text:000000000000021c .L0 
     /tmp/ccczShRC.s:393    .text:0000000000000220 .L0 
     /tmp/ccczShRC.s:397    .text:0000000000000228 .L0 
     /tmp/ccczShRC.s:398    .text:0000000000000228 .L0 
     /tmp/ccczShRC.s:401    .text:000000000000022c .L0 
     /tmp/ccczShRC.s:402    .text:000000000000022c .L0 
     /tmp/ccczShRC.s:404    .text:0000000000000230 .L0 
     /tmp/ccczShRC.s:406    .text:0000000000000234 .L0 
     /tmp/ccczShRC.s:407    .text:0000000000000234 .L0 
     /tmp/ccczShRC.s:410    .text:0000000000000240 .L0 
     /tmp/ccczShRC.s:412    .text:0000000000000244 .L0 
     /tmp/ccczShRC.s:415    .text:0000000000000250 .L0 
     /tmp/ccczShRC.s:418    .text:0000000000000254 .L0 
     /tmp/ccczShRC.s:419    .text:0000000000000254 .L0 
     /tmp/ccczShRC.s:422    .text:0000000000000258 .L0 
     /tmp/ccczShRC.s:428    .text:0000000000000260 .L0 
     /tmp/ccczShRC.s:429    .text:0000000000000260 .L0 
     /tmp/ccczShRC.s:430    .text:0000000000000260 .L0 
     /tmp/ccczShRC.s:432    .text:0000000000000264 .L0 
     /tmp/ccczShRC.s:436    .text:0000000000000268 .L0 
     /tmp/ccczShRC.s:437    .text:0000000000000268 .L0 
     /tmp/ccczShRC.s:439    .text:000000000000026c .L0 
     /tmp/ccczShRC.s:442    .text:0000000000000270 .L0 
     /tmp/ccczShRC.s:443    .text:0000000000000270 .L0 
     /tmp/ccczShRC.s:445    .text:0000000000000274 .L0 
     /tmp/ccczShRC.s:446    .text:0000000000000274 .L0 
     /tmp/ccczShRC.s:448    .text:0000000000000278 .L0 
     /tmp/ccczShRC.s:451    .text:000000000000027c .L0 
     /tmp/ccczShRC.s:452    .text:000000000000027c .L0 
     /tmp/ccczShRC.s:457    .text:0000000000000288 .L0 
     /tmp/ccczShRC.s:458    .text:0000000000000288 .L0 
     /tmp/ccczShRC.s:463    .text:0000000000000298 .L0 
     /tmp/ccczShRC.s:464    .text:0000000000000298 .L0 
     /tmp/ccczShRC.s:467    .text:000000000000029c .L0 
     /tmp/ccczShRC.s:468    .text:00000000000002a0 .L0 
     /tmp/ccczShRC.s:469    .text:00000000000002a0 .L0 
     /tmp/ccczShRC.s:471    .text:00000000000002a4 .L0 
     /tmp/ccczShRC.s:472    .text:00000000000002a4 .L0 
     /tmp/ccczShRC.s:474    .text:00000000000002a8 .L0 
     /tmp/ccczShRC.s:477    .text:00000000000002ac .L0 
     /tmp/ccczShRC.s:480    .text:00000000000002b0 .L0 
     /tmp/ccczShRC.s:484    .text:00000000000002b4 .L0 
     /tmp/ccczShRC.s:486    .text:00000000000002b4 .L0 
     /tmp/ccczShRC.s:490    .text:00000000000002bc .L0 
     /tmp/ccczShRC.s:491    .text:00000000000002bc .L0 
     /tmp/ccczShRC.s:492    .text:00000000000002bc .L0 
     /tmp/ccczShRC.s:493    .text:00000000000002bc .L0 
     /tmp/ccczShRC.s:494    .text:00000000000002bc .L0 
     /tmp/ccczShRC.s:496    .text:00000000000002bc .L0 
     /tmp/ccczShRC.s:499    .text:00000000000002c0 .L0 
     /tmp/ccczShRC.s:502    .text:00000000000002c4 .L0 
     /tmp/ccczShRC.s:503    .text:00000000000002c4 .L0 
     /tmp/ccczShRC.s:504    .text:00000000000002c4 .L0 
     /tmp/ccczShRC.s:505    .text:00000000000002c4 .L0 
GAS LISTING /tmp/ccczShRC.s 			page 17


     /tmp/ccczShRC.s:506    .text:00000000000002c4 .L0 
     /tmp/ccczShRC.s:508    .text:00000000000002c4 .L0 
     /tmp/ccczShRC.s:514    .text:00000000000002cc .L0 
     /tmp/ccczShRC.s:522    .text:00000000000002dc .L0 
     /tmp/ccczShRC.s:527    .bss:0000000000000000 .LANCHOR0
     /tmp/ccczShRC.s:530    .bss:0000000000000000 _ZGVZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccczShRC.s:534    .bss:0000000000000008 _ZZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccczShRC.s:540    .text:00000000000002dc .L0 
     /tmp/ccczShRC.s:98     .text:0000000000000064 .L0 
     /tmp/ccczShRC.s:108    .text:0000000000000080 .L0 
     /tmp/ccczShRC.s:280    .text:000000000000015c .L0 
     /tmp/ccczShRC.s:284    .text:0000000000000168 .L0 
     /tmp/ccczShRC.s:297    .text:0000000000000184 .L0 
     /tmp/ccczShRC.s:301    .text:0000000000000198 .L0 
     /tmp/ccczShRC.s:304    .text:00000000000001a0 .L0 
     /tmp/ccczShRC.s:407    .text:0000000000000234 .L0 
     /tmp/ccczShRC.s:412    .text:0000000000000244 .L0 
     /tmp/ccczShRC.s:36     .text:0000000000000020 .L2
     /tmp/ccczShRC.s:186    .text:00000000000000f4 .L9
     /tmp/ccczShRC.s:168    .text:00000000000000dc .L10
     /tmp/ccczShRC.s:232    .text:000000000000012c .L8
     /tmp/ccczShRC.s:250    .text:0000000000000140 .L12
     /tmp/ccczShRC.s:242    .text:0000000000000138 .L13
     /tmp/ccczShRC.s:207    .text:0000000000000110 .L14
     /tmp/ccczShRC.s:260    .text:0000000000000150 .L16
     /tmp/ccczShRC.s:225    .text:0000000000000128 .L15
     /tmp/ccczShRC.s:286    .text:0000000000000174 .L24
     /tmp/ccczShRC.s:344    .text:00000000000001e0 .L25
     /tmp/ccczShRC.s:353    .text:00000000000001ec .L28
     /tmp/ccczShRC.s:489    .text:00000000000002bc .L35
     /tmp/ccczShRC.s:501    .text:00000000000002c4 .L36
     /tmp/ccczShRC.s:512    .text:00000000000002cc .L37
     /tmp/ccczShRC.s:518    .text:00000000000002d4 .L38
     /tmp/ccczShRC.s:434    .text:0000000000000268 .L32
     /tmp/ccczShRC.s:440    .text:0000000000000270 .L31
     /tmp/ccczShRC.s:426    .text:0000000000000260 .L43
     /tmp/ccczShRC.s:483    .text:00000000000002b4 .L33
     /tmp/ccczShRC.s:449    .text:000000000000027c .L34
     /tmp/ccczShRC.s:465    .text:000000000000029c .L30
     /tmp/ccczShRC.s:1047   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccczShRC.s:2090   .debug_str:0000000000000152 .LASF37
     /tmp/ccczShRC.s:2116   .debug_str:00000000000002d2 .LASF38
     /tmp/ccczShRC.s:2084   .debug_str:0000000000000115 .LASF39
     /tmp/ccczShRC.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccczShRC.s:537    .text:00000000000002dc .Letext0
     /tmp/ccczShRC.s:2040   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccczShRC.s:2100   .debug_str:000000000000025a .LASF0
     /tmp/ccczShRC.s:2082   .debug_str:0000000000000102 .LASF1
     /tmp/ccczShRC.s:2076   .debug_str:00000000000000da .LASF2
     /tmp/ccczShRC.s:2056   .debug_str:0000000000000053 .LASF4
     /tmp/ccczShRC.s:2080   .debug_str:00000000000000f0 .LASF3
     /tmp/ccczShRC.s:2046   .debug_str:0000000000000023 .LASF5
     /tmp/ccczShRC.s:2042   .debug_str:0000000000000000 .LASF6
     /tmp/ccczShRC.s:2068   .debug_str:00000000000000a9 .LASF7
     /tmp/ccczShRC.s:2110   .debug_str:00000000000002a0 .LASF8
     /tmp/ccczShRC.s:2052   .debug_str:000000000000003e .LASF9
     /tmp/ccczShRC.s:2142   .debug_str:00000000000003a0 .LASF10
GAS LISTING /tmp/ccczShRC.s 			page 18


     /tmp/ccczShRC.s:2072   .debug_str:00000000000000c2 .LASF11
     /tmp/ccczShRC.s:2134   .debug_str:000000000000037d .LASF12
     /tmp/ccczShRC.s:2118   .debug_str:00000000000002ea .LASF13
     /tmp/ccczShRC.s:2086   .debug_str:0000000000000134 .LASF14
     /tmp/ccczShRC.s:2064   .debug_str:0000000000000085 .LASF15
     /tmp/ccczShRC.s:2112   .debug_str:00000000000002b0 .LASF16
     /tmp/ccczShRC.s:2044   .debug_str:0000000000000013 .LASF40
     /tmp/ccczShRC.s:2054   .debug_str:000000000000004c .LASF41
     /tmp/ccczShRC.s:2078   .debug_str:00000000000000e8 .LASF17
     /tmp/ccczShRC.s:2096   .debug_str:0000000000000239 .LASF18
     /tmp/ccczShRC.s:2088   .debug_str:0000000000000140 .LASF19
     /tmp/ccczShRC.s:2098   .debug_str:000000000000024e .LASF42
     /tmp/ccczShRC.s:2048   .debug_str:000000000000002a .LASF20
     /tmp/ccczShRC.s:2066   .debug_str:000000000000009b .LASF21
     /tmp/ccczShRC.s:2114   .debug_str:00000000000002c6 .LASF43
     /tmp/ccczShRC.s:2108   .debug_str:000000000000027c .LASF44
     /tmp/ccczShRC.s:2140   .debug_str:0000000000000399 .LASF22
     /tmp/ccczShRC.s:2124   .debug_str:000000000000032d .LASF24
     /tmp/ccczShRC.s:2120   .debug_str:00000000000002fa .LASF23
     /tmp/ccczShRC.s:2062   .debug_str:0000000000000068 .LASF25
     /tmp/ccczShRC.s:2094   .debug_str:0000000000000220 .LASF45
     /tmp/ccczShRC.s:2136   .debug_str:000000000000038d .LASF26
     /tmp/ccczShRC.s:2102   .debug_str:0000000000000267 .LASF46
     /tmp/ccczShRC.s:2122   .debug_str:00000000000002ff .LASF47
     /tmp/ccczShRC.s:320    .text:00000000000001b8 .LFB8
     /tmp/ccczShRC.s:369    .text:0000000000000204 .LFE8
     /tmp/ccczShRC.s:2058   .debug_str:000000000000005a .LASF28
     /tmp/ccczShRC.s:2070   .debug_str:00000000000000bc .LASF29
     /tmp/ccczShRC.s:275    .text:000000000000015c .LFB7
     /tmp/ccczShRC.s:314    .text:00000000000001b8 .LFE7
     /tmp/ccczShRC.s:2060   .debug_str:000000000000005f .LASF27
     /tmp/ccczShRC.s:299    .text:0000000000000194 .LVL23
     /tmp/ccczShRC.s:375    .text:0000000000000204 .LFB6
     /tmp/ccczShRC.s:523    .text:00000000000002dc .LFE6
     /tmp/ccczShRC.s:1728   .debug_loc:0000000000000000 .LLST9
     /tmp/ccczShRC.s:2138   .debug_str:0000000000000392 .LASF30
     /tmp/ccczShRC.s:1781   .debug_loc:00000000000000e7 .LLST10
     /tmp/ccczShRC.s:1813   .debug_loc:000000000000016f .LLST11
     /tmp/ccczShRC.s:2074   .debug_str:00000000000000d1 .LASF31
     /tmp/ccczShRC.s:1838   .debug_loc:00000000000001d1 .LLST12
     /tmp/ccczShRC.s:2130   .debug_str:000000000000036c .LASF32
     /tmp/ccczShRC.s:1858   .debug_loc:000000000000022e .LLST13
     /tmp/ccczShRC.s:455    .text:0000000000000288 .LVL33
     /tmp/ccczShRC.s:461    .text:0000000000000298 .LVL34
     /tmp/ccczShRC.s:146    .text:00000000000000c0 .LFB5
     /tmp/ccczShRC.s:269    .text:000000000000015c .LFE5
     /tmp/ccczShRC.s:1878   .debug_loc:000000000000028b .LLST4
     /tmp/ccczShRC.s:2050   .debug_str:000000000000002f .LASF33
     /tmp/ccczShRC.s:1889   .debug_loc:00000000000002c1 .LLST5
     /tmp/ccczShRC.s:1900   .debug_loc:00000000000002f7 .LLST6
     /tmp/ccczShRC.s:1920   .debug_loc:0000000000000354 .LLST7
     /tmp/ccczShRC.s:2032   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccczShRC.s:2132   .debug_str:0000000000000374 .LASF34
     /tmp/ccczShRC.s:1944   .debug_loc:00000000000003c4 .LLST8
     /tmp/ccczShRC.s:2126   .debug_str:000000000000034b .LASF48
     /tmp/ccczShRC.s:78     .text:0000000000000048 .LFB3
     /tmp/ccczShRC.s:138    .text:00000000000000c0 .LFE3
GAS LISTING /tmp/ccczShRC.s 			page 19


     /tmp/ccczShRC.s:1955   .debug_loc:00000000000003fa .LLST3
     /tmp/ccczShRC.s:102    .text:0000000000000078 .LVL8
     /tmp/ccczShRC.s:111    .text:0000000000000094 .LVL9
     /tmp/ccczShRC.s:2092   .debug_str:0000000000000216 .LASF49
     /tmp/ccczShRC.s:51     .text:000000000000002c .LFB1
     /tmp/ccczShRC.s:72     .text:0000000000000048 .LFE1
     /tmp/ccczShRC.s:2104   .debug_str:000000000000026d .LASF35
     /tmp/ccczShRC.s:1973   .debug_loc:0000000000000446 .LLST2
     /tmp/ccczShRC.s:2128   .debug_str:0000000000000364 .LASF50
     /tmp/ccczShRC.s:9      .text:0000000000000000 .LFB0
     /tmp/ccczShRC.s:46     .text:000000000000002c .LFE0
     /tmp/ccczShRC.s:1987   .debug_loc:000000000000047f .LLST0
     /tmp/ccczShRC.s:2106   .debug_str:0000000000000275 .LASF36
     /tmp/ccczShRC.s:2001   .debug_loc:00000000000004b8 .LLST1
     /tmp/ccczShRC.s:378    .text:0000000000000204 .LVL25
     /tmp/ccczShRC.s:453    .text:0000000000000280 .LVL32
     /tmp/ccczShRC.s:478    .text:00000000000002ac .LVL36
     /tmp/ccczShRC.s:482    .text:00000000000002b4 .LVL37
     /tmp/ccczShRC.s:497    .text:00000000000002c0 .LVL39
     /tmp/ccczShRC.s:500    .text:00000000000002c4 .LVL40
     /tmp/ccczShRC.s:509    .text:00000000000002c8 .LVL41
     /tmp/ccczShRC.s:511    .text:00000000000002cc .LVL42
     /tmp/ccczShRC.s:515    .text:00000000000002d0 .LVL43
     /tmp/ccczShRC.s:517    .text:00000000000002d4 .LVL44
     /tmp/ccczShRC.s:520    .text:00000000000002d8 .LVL45
     /tmp/ccczShRC.s:423    .text:000000000000025c .LVL29
     /tmp/ccczShRC.s:475    .text:00000000000002a8 .LVL35
     /tmp/ccczShRC.s:488    .text:00000000000002bc .LVL38
     /tmp/ccczShRC.s:399    .text:000000000000022c .LVL26
     /tmp/ccczShRC.s:417    .text:0000000000000254 .LVL27
     /tmp/ccczShRC.s:425    .text:0000000000000260 .LVL30
     /tmp/ccczShRC.s:433    .text:0000000000000268 .LVL31
     /tmp/ccczShRC.s:420    .text:0000000000000258 .LVL28
     /tmp/ccczShRC.s:149    .text:00000000000000c0 .LVL11
     /tmp/ccczShRC.s:164    .text:00000000000000d8 .LVL13
     /tmp/ccczShRC.s:160    .text:00000000000000d4 .LVL12
     /tmp/ccczShRC.s:177    .text:00000000000000e8 .LVL15
     /tmp/ccczShRC.s:183    .text:00000000000000f0 .LVL16
     /tmp/ccczShRC.s:231    .text:000000000000012c .LVL20
     /tmp/ccczShRC.s:241    .text:0000000000000138 .LVL21
     /tmp/ccczShRC.s:167    .text:00000000000000dc .LVL14
     /tmp/ccczShRC.s:211    .text:0000000000000114 .LVL18
     /tmp/ccczShRC.s:201    .text:0000000000000108 .LVL17
     /tmp/ccczShRC.s:224    .text:0000000000000128 .LVL19
     /tmp/ccczShRC.s:249    .text:0000000000000140 .LVL22
     /tmp/ccczShRC.s:81     .text:0000000000000048 .LVL6
     /tmp/ccczShRC.s:100    .text:0000000000000070 .LVL7
     /tmp/ccczShRC.s:133    .text:00000000000000b8 .LVL10
     /tmp/ccczShRC.s:54     .text:000000000000002c .LVL4
     /tmp/ccczShRC.s:64     .text:000000000000003c .LVL5
     /tmp/ccczShRC.s:13     .text:0000000000000000 .LVL0
     /tmp/ccczShRC.s:30     .text:0000000000000018 .LVL2
     /tmp/ccczShRC.s:21     .text:000000000000000c .LVL1
     /tmp/ccczShRC.s:35     .text:0000000000000020 .LVL3
     /tmp/ccczShRC.s:541    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccczShRC.s:195    .text:0000000000000100 .LBB4
     /tmp/ccczShRC.s:226    .text:0000000000000128 .LBE4
GAS LISTING /tmp/ccczShRC.s 			page 20


     /tmp/ccczShRC.s:245    .text:0000000000000138 .LBB5
     /tmp/ccczShRC.s:251    .text:0000000000000140 .LBE5

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
